var ne=o=>{throw TypeError(o)};var re=(o,e,t)=>e.has(o)||ne("Cannot "+t);var r=(o,e,t)=>(re(o,e,"read from private field"),t?t.call(o):e.get(o)),u=(o,e,t)=>e.has(o)?ne("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(o):e.set(o,t),h=(o,e,t,s)=>(re(o,e,"write to private field"),s?s.call(o,t):e.set(o,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const pe=o=>`
  <article class="story-item">
    <img src="${o.photoUrl}" alt="${o.description}" class="story-item__thumbnail" loading="lazy">
    <div class="story-item__content">
      <h3 class="story-item__name">${o.name}</h3>
      <p class="story-item__description">${o.description}</p>
      <p class="story-item__date">${new Date(o.createdAt).toLocaleDateString()}</p>
      ${o.lat&&o.lon?`
        <button class="story-item__view-on-map" data-lat="${o.lat}" data-lon="${o.lon}" onclick="window.location.hash = '#/detail/:${o.id}'">Lihat di Peta</button>
      `:""}
    </div>
  </article>
`;var y,A,F;class ye{constructor({view:e,storyModel:t,authModel:s}){u(this,y);u(this,A);u(this,F);h(this,y,e),h(this,A,t),h(this,F,s)}async initialize(){r(this,y).bindLogoutButton(this._handleLogout.bind(this)),await this._loadStories(),r(this,y).focusMainContent(),r(this,y).handleSkipLinkAutoFocus()}_handleLogout(e){e.preventDefault(),r(this,F).clearAuthData(),window.location.hash="#/login"}async _loadStories(){const e=localStorage.getItem("authToken");if(!e){r(this,y).displayLoginPrompt();return}try{const t=await r(this,A).getAllStories(e,1,10,0);t.success?r(this,y).renderStories(t.data):(console.error("Error fetching stories:",t.error),r(this,y).displayErrorMessage(t.error))}catch(t){console.error("Failed to fetch stories:",t),r(this,y).displayErrorMessage("Terjadi kesalahan saat mengambil data cerita.")}}}y=new WeakMap,A=new WeakMap,F=new WeakMap;const W="https://story-api.dicoding.dev/v1",q={REGISTER:`${W}/register`,LOGIN:`${W}/login`,ADD_STORY:`${W}/stories`,GET_ALL_STORIES:`${W}/stories`},Q=(o,e)=>e.some(t=>o instanceof t);let ie,ae;function fe(){return ie||(ie=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function we(){return ae||(ae=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const X=new WeakMap,K=new WeakMap,J=new WeakMap;function be(o){const e=new Promise((t,s)=>{const n=()=>{o.removeEventListener("success",i),o.removeEventListener("error",a)},i=()=>{t(P(o.result)),n()},a=()=>{s(o.error),n()};o.addEventListener("success",i),o.addEventListener("error",a)});return J.set(e,o),e}function ve(o){if(X.has(o))return;const e=new Promise((t,s)=>{const n=()=>{o.removeEventListener("complete",i),o.removeEventListener("error",a),o.removeEventListener("abort",a)},i=()=>{t(),n()},a=()=>{s(o.error||new DOMException("AbortError","AbortError")),n()};o.addEventListener("complete",i),o.addEventListener("error",a),o.addEventListener("abort",a)});X.set(o,e)}let ee={get(o,e,t){if(o instanceof IDBTransaction){if(e==="done")return X.get(o);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return P(o[e])},set(o,e,t){return o[e]=t,!0},has(o,e){return o instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in o}};function ue(o){ee=o(ee)}function ke(o){return we().includes(o)?function(...e){return o.apply(te(this),e),P(this.request)}:function(...e){return P(o.apply(te(this),e))}}function Ee(o){return typeof o=="function"?ke(o):(o instanceof IDBTransaction&&ve(o),Q(o,fe())?new Proxy(o,ee):o)}function P(o){if(o instanceof IDBRequest)return be(o);if(K.has(o))return K.get(o);const e=Ee(o);return e!==o&&(K.set(o,e),J.set(e,o)),e}const te=o=>J.get(o);function he(o,e,{blocked:t,upgrade:s,blocking:n,terminated:i}={}){const a=indexedDB.open(o,e),c=P(a);return s&&a.addEventListener("upgradeneeded",d=>{s(P(a.result),d.oldVersion,d.newVersion,P(a.transaction),d)}),t&&a.addEventListener("blocked",d=>t(d.oldVersion,d.newVersion,d)),c.then(d=>{i&&d.addEventListener("close",()=>i()),n&&d.addEventListener("versionchange",g=>n(g.oldVersion,g.newVersion,g))}).catch(()=>{}),c}const Se=["get","getKey","getAll","getAllKeys","count"],Ie=["put","add","delete","clear"],Y=new Map;function ce(o,e){if(!(o instanceof IDBDatabase&&!(e in o)&&typeof e=="string"))return;if(Y.get(e))return Y.get(e);const t=e.replace(/FromIndex$/,""),s=e!==t,n=Ie.includes(t);if(!(t in(s?IDBIndex:IDBObjectStore).prototype)||!(n||Se.includes(t)))return;const i=async function(a,...c){const d=this.transaction(a,n?"readwrite":"readonly");let g=d.store;return s&&(g=g.index(c.shift())),(await Promise.all([g[t](...c),n&&d.done]))[0]};return Y.set(e,i),i}ue(o=>({...o,get:(e,t,s)=>ce(e,t)||o.get(e,t,s),has:(e,t)=>!!ce(e,t)||o.has(e,t)}));const Be=["continue","continuePrimaryKey","advance"],le={},se=new WeakMap,ge=new WeakMap,Pe={get(o,e){if(!Be.includes(e))return o[e];let t=le[e];return t||(t=le[e]=function(...s){se.set(this,ge.get(this)[e](...s))}),t}};async function*Le(...o){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...o)),!e)return;e=e;const t=new Proxy(e,Pe);for(ge.set(t,e),J.set(t,te(e));e;)yield t,e=await(se.get(t)||e.continue()),se.delete(t)}function de(o,e){return e===Symbol.asyncIterator&&Q(o,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&Q(o,[IDBIndex,IDBObjectStore])}ue(o=>({...o,get(e,t,s){return de(e,t)?Le:o.get(e,t,s)},has(e,t){return de(e,t)||o.has(e,t)}}));const Me="story-app-db",De=1,k="stories",D={async open(){return he(Me,De,{upgrade(o){o.objectStoreNames.contains(k)||o.createObjectStore(k,{keyPath:"id"})}})},async getStoryDetail(o){return(await this.open()).get(k,o)},async getAllStories(){return(await this.open()).getAll(k)},async putStories(o){const t=(await this.open()).transaction(k,"readwrite"),s=t.objectStore(k);return await Promise.all(o.map(n=>s.put(n))),t.done},async clearStories(){const e=(await this.open()).transaction(k,"readwrite");return await e.objectStore(k).clear(),e.done}};class Ce{constructor(e=q.GET_ALL_STORIES||"https://story-api.dicoding.dev/v1/stories"){this.baseUrl=e}async getAllStories(e,t=1,s=10,n=0){try{const i=await fetch(`${this.baseUrl}?page=${t}&size=${s}&location=${n}`,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),a=await i.json();if(!i.ok){console.warn("Network fetch failed, attempting to get from IndexedDB.");const c=await D.getAllStories();if(c&&c.length>0)return{success:!0,data:c,error:null,source:"indexeddb_fallback"};throw new Error(a.message||"Failed to fetch stories from network or cache.")}return await D.putStories(a.listStory),{success:!0,data:a.listStory,error:null,source:"network"}}catch(i){console.error("Error fetching stories:",i),console.warn("Network request failed, trying to retrieve from IndexedDB.");try{const a=await D.getAllStories();return a&&a.length>0?{success:!0,data:a,error:null,source:"indexeddb"}:{success:!1,data:null,error:i.message||"An error occurred and no cached data available.",source:"no_data_available"}}catch(a){return console.error("Error retrieving from IndexedDB:",a),{success:!1,data:null,error:`Network error and IndexedDB retrieval failed: ${i.message||a.message}`,source:"fetch_and_indexeddb_failed"}}}}}const _e="story-app-db",Te=1,M="stories",xe={async open(){return he(_e,Te,{upgrade(o){o.objectStoreNames.contains(M)||o.createObjectStore(M,{keyPath:"id"}),o.objectStoreNames.contains("stories")||o.createObjectStore("stories",{keyPath:"id"})}})},async putStoryDetail(o){const t=(await this.open()).transaction(M,"readwrite");return await t.objectStore(M).put(o),t.done},async clearDetailStories(){const e=(await this.open()).transaction(M,"readwrite");return await e.objectStore(M).clear(),e.done}};class v{constructor(e=q.LOGIN){this.baseUrl=e}async _clearServiceWorkerCaches(){return"serviceWorker"in navigator&&navigator.serviceWorker.controller?(console.log("Mengirim pesan ke service worker untuk membersihkan cache..."),new Promise((e,t)=>{const s=new MessageChannel;s.port1.onmessage=n=>{n.data.status==="success"?(console.log("Cache service worker berhasil dikosongkan."),e()):(console.error("Gagal mengosongkan cache service worker:",n.data.error),t(new Error(n.data.error)))},navigator.serviceWorker.controller.postMessage({action:"clearAllCaches"},[s.port2])})):(console.warn("Service Worker tidak terdaftar atau tidak aktif. Tidak dapat membersihkan cache."),Promise.resolve())}async _clearAllIndexedDBData(){console.log("Membersihkan semua data di IndexedDB...");try{await D.clearStories(),await xe.clearDetailStories(),console.log("Semua data IndexedDB (stories dan detail-stories) berhasil dikosongkan.")}catch(e){throw console.error("Gagal membersihkan data IndexedDB:",e),e}}async login(e,t){try{const s=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),n=await s.json();if(!s.ok)throw new Error(n.message||"Login failed");return{success:!0,data:{message:n.message,userId:n.loginResult.userId,name:n.loginResult.name,token:n.loginResult.token},error:null}}catch(s){return{success:!1,data:null,error:s.message||"An error occurred during login"}}}static isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static storeAuthData(e,t,s){localStorage.setItem("authToken",e),localStorage.setItem("userId",t),localStorage.setItem("userName",s)}static isAuthenticated(){return!!localStorage.getItem("authToken")}static async clearAuthData(){localStorage.removeItem("authToken"),localStorage.removeItem("userId"),localStorage.removeItem("userName");const e=new v;await e._clearServiceWorkerCaches(),await e._clearAllIndexedDBData()}}var N;class Ae{constructor(){u(this,N)}getTemplate(){return`
      <a href="#mainContent" class="skip-link">Skip to main content</a>
      <header>
        <div class="header-content">
          <a href="#/login" id="logoutBtn" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Logout
          </a>
          <div id="userInfo"></div>
        </div>
      </header>
      <main id='asep3' tabindex="-1"> <h1>Story List</h1>
        <h2>Bagikan Ceritamu!</h2>
        <p>Temukan cerita menarik dari pengguna Dicoding.</p>
        <a id="tambahBtn" href="#/add">Tambah Cerita</a>
        <div id="story-container"></div>
      </main>
    `}getElements(){return{logoutBtn:document.getElementById("logoutBtn"),storyContainer:document.getElementById("story-container"),userInfoDiv:document.getElementById("userInfo"),mainContent:document.querySelector("#story-container"),skipLink:document.querySelector(".skip-link")}}bindLogoutButton(e){const{logoutBtn:t}=this.getElements();t&&t.addEventListener("click",e)}renderStories(e){const{storyContainer:t}=this.getElements();t&&(t.innerHTML="",e.forEach(s=>{const n=document.createElement("div");n.classList.add("story"),n.innerHTML+=pe(s),t.appendChild(n)}))}handleSkipLinkAutoFocus(){const{skipLink:e}=this.getElements();if(!e)return;function t(){window.scrollY===0?(e.style.top="80px",e.style.left="50px",e.tabIndex=0,e.focus()):(e.style.top="-100px",e.tabIndex=-1,e.blur())}window.addEventListener("scroll",t),window.addEventListener("load",t)}displayLoginPrompt(){const{storyContainer:e}=this.getElements();e&&(e.innerHTML='<p>Anda harus <a href="#/login">login</a> terlebih dahulu untuk melihat daftar cerita.</p>')}displayErrorMessage(e){const{storyContainer:t}=this.getElements();t&&(t.innerHTML=`<p>Error: ${e}</p>`)}focusMainContent(){const{mainContent:e,skipLink:t}=this.getElements();!e||!t||t._focusHandlerAdded||(t.addEventListener("click",function(s){s.preventDefault(),t.blur();const n=e.querySelector(".story-item__view-on-map");n?n.focus():e.focus(),e.scrollIntoView()}),t._focusHandlerAdded=!0)}async render(){return this.getTemplate()}async afterRender(){const e=new Ce,t=v;h(this,N,new ye({view:this,storyModel:e,authModel:t})),await r(this,N).initialize()}}N=new WeakMap;var l,S,G,C;class Fe{constructor({view:e,addStoryModel:t,authModel:s=v}){u(this,l);u(this,S);u(this,G);u(this,C);h(this,l,e),h(this,S,t),h(this,G,s),h(this,C,localStorage.getItem("authToken")),this._stream=null,this._map=null,this._marker=null}async initialize(){if(!r(this,C)){r(this,l).displayMessage("You need to login first to share a story","error"),r(this,l).hideForm(),setTimeout(()=>window.location.href="#/login",2e3);return}const{map:e,marker:t}=r(this,l).initMap(this._handleMapClick.bind(this),this._handleLatLonInputChange.bind(this));this._map=e,this._marker=t,r(this,l).bindFormSubmit(this._handleSubmitStory.bind(this)),r(this,l).bindStartCameraButton(this._handleStartCamera.bind(this)),r(this,l).bindCaptureButton(this._handleCapturePhoto.bind(this)),r(this,l).bindPhotoInputChange(this._handlePhotoInputChange.bind(this)),r(this,l).bindLocationInputChanges(()=>this._handleLatLonInputChange(r(this,l).getElements().latInput,r(this,l).getElements().lonInput,this._marker,this._map),()=>this._handleLatLonInputChange(r(this,l).getElements().latInput,r(this,l).getElements().lonInput,this._marker,this._map))}_handleMapClick(e,t,s,n){this._marker=r(this,l).updateMapMarker(e,t,s,n)}_handleLatLonInputChange(e,t,s,n){const i=parseFloat(e.value),a=parseFloat(t.value);isNaN(i)||isNaN(a)||(this._marker=r(this,l).updateMapMarker(i,a,s,n),n&&n.setView([i,a],n.getZoom()))}async _handleStartCamera(){try{this._stream=await navigator.mediaDevices.getUserMedia({video:!0}),r(this,l).showCameraPreview(this._stream)}catch(e){alert("Unable to access camera: "+e.message)}}_handleCapturePhoto(){if(!this._stream)return;const{snapshotCanvas:e,cameraPreview:t,photoInput:s}=r(this,l).getElements(),n=e.getContext("2d");e.width=t.videoWidth,e.height=t.videoHeight,n.drawImage(t,0,0,e.width,e.height),e.toBlob(i=>{const a=new File([i],"captured.jpeg",{type:"image/jpeg"}),c=new DataTransfer;c.items.add(a),s.files=c.files;const d=URL.createObjectURL(a);r(this,l).displayPhotoPreview(d),this._stream&&(this._stream.getTracks().forEach(g=>g.stop()),this._stream=null),r(this,l).hideCameraPreview()},"image/jpeg",.95)}_handlePhotoInputChange(e){const t=e.target.files[0];if(t&&t.type.startsWith("image/")){const s=URL.createObjectURL(t);r(this,l).displayPhotoPreview(s)}}async _handleSubmitStory(e){e.preventDefault(),r(this,l).hideMessage(),r(this,l).disableSubmitButton(!0);const{descriptionInput:t,photoInput:s,latInput:n,lonInput:i}=r(this,l).getElements(),a=s.files[0];if(typeof r(this,S).isValidImage!="function"||!r(this,S).isValidImage(a)){r(this,l).displayMessage("Please upload a valid image (JPEG/PNG/GIF, max 1MB)","error"),r(this,l).disableSubmitButton(!1);return}const c=new FormData;c.append("description",t.value),c.append("photo",a),n.value&&i.value&&(c.append("lat",parseFloat(n.value)),c.append("lon",parseFloat(i.value)));try{const d=await new(r(this,S))().submitStory(c,r(this,C));d.success?(r(this,l).displayMessage("Story submitted successfully!","success"),r(this,l).resetForm(),window.location.href="#/"):r(this,l).displayMessage(d.error||"Failed to submit story","error")}catch(d){r(this,l).displayMessage("An error occurred. Please try again.","error"),console.error(d)}finally{r(this,l).disableSubmitButton(!1)}}}l=new WeakMap,S=new WeakMap,G=new WeakMap,C=new WeakMap;class Ne{constructor(e=q.ADD_STORY||"https://story-api.dicoding.dev/v1/stories"){this.baseUrl=e}async submitStory(e,t){try{const s=await fetch(this.baseUrl,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:e}),n=await s.text();console.log("Raw response text:",n);const i=JSON.parse(n);if(s.status!==201)throw new Error(i.message||"Failed to submit story");if(s.status===201)return{success:!0,data:i,error:null}}catch(s){return{success:!1,data:null,error:s.message||"An error occurred while submitting the story"}}}static isValidImage(e){if(!e)return!1;const t=["image/jpeg","image/png","image/gif"],s=1*1024*1024;return t.includes(e.type)&&e.size<=s}}var R;class Re{constructor(){u(this,R)}getTemplate(){return`
      <header>
        <div class="header-content">
          <a href="#/" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Back to Stories
          </a>
          <div id="userInfo"></div>
        </div>
      </header>

      <main id="alien" class="story-container">
        <h1>Share Your Story</h1>
        <form id="storyForm" enctype="multipart/form-data">
          <section class="form-group">
            <label for="description">Story Description</label>
            <textarea id="description" name="description" rows="4" required></textarea>
          </section>

          <section class="form-group">
            <label>Take a Photo or Upload</label>
            <div class="camera-section">
              <video id="cameraPreview" autoplay playsinline style="display: none; width: 100%; max-height: 250px;"></video>
              <button type="button" id="startCameraBtn" class="captureBtn">Start Camera</button>
              <button type="button" id="captureBtn" class="captureBtn">Capture</button>
              <canvas id="snapshotCanvas" style="display: none;"></canvas>
            </div>

            <div id="asep2" class="form-group">
              <label for="photo">Or Upload Photo (Max 1MB)</label>
              <input type="file" id="photo" name="photo" accept="image/*">
              <div class="file-hint">Accepted formats: JPEG, PNG, GIF</div>
              <img id="photo-preview" style="max-width: 100%; margin-top: 10px; display: none;" />
            </div>
          </section>

          <section class="location-group">
            <h3>Location (Optional)</h3>
            <div class="form-row">
              <div class="form-group half-width">
                <label for="lat">Latitude</label>
                <input type="number" id="lat" name="lat" step="any" placeholder="e.g., -6.2088">
              </div>
              <div class="form-group half-width">
                <label for="lon">Longitude</label>
                <input type="number" id="lon" name="lon" step="any" placeholder="e.g., 106.8456">
              </div>
            </div>
            <div class="map-container" style="margin-top: 10px; margin-bottom: 10px; margin-right: 10px; margin-left: 10px;">
              <div id="map-picker"></div>
            </div>
          </section>

          <button type="submit" id="submitBtn">Submit Story</button>
        </form>

        <section id="message" class="message"></section>
      </main>
    `}getElements(){return{storyForm:document.getElementById("storyForm"),descriptionInput:document.getElementById("description"),photoInput:document.getElementById("photo"),latInput:document.getElementById("lat"),lonInput:document.getElementById("lon"),messageDiv:document.getElementById("message"),submitBtn:document.getElementById("submitBtn"),mapPicker:document.getElementById("map-picker"),cameraPreview:document.getElementById("cameraPreview"),startCameraBtn:document.getElementById("startCameraBtn"),captureBtn:document.getElementById("captureBtn"),snapshotCanvas:document.getElementById("snapshotCanvas"),photoPreview:document.getElementById("photo-preview")}}bindFormSubmit(e){const{storyForm:t}=this.getElements();t&&t.addEventListener("submit",e)}bindStartCameraButton(e){const{startCameraBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindCaptureButton(e){const{captureBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindPhotoInputChange(e){const{photoInput:t}=this.getElements();t&&t.addEventListener("change",e)}bindLocationInputChanges(e,t){const{latInput:s,lonInput:n}=this.getElements();s&&s.addEventListener("change",e),n&&n.addEventListener("change",t)}displayMessage(e,t){const{messageDiv:s}=this.getElements();s&&(s.textContent=e,s.className=`message ${t}`,s.style.display="block")}hideMessage(){const{messageDiv:e}=this.getElements();e&&(e.style.display="none")}disableSubmitButton(e){const{submitBtn:t}=this.getElements();t&&(t.disabled=e,t.textContent=e?"Submitting...":"Submit Story")}hideForm(){const{storyForm:e}=this.getElements();e&&(e.style.display="none")}showCameraPreview(e){const{cameraPreview:t,captureBtn:s}=this.getElements();t&&(t.srcObject=e,t.style.display=""),s&&(s.disabled=!1)}hideCameraPreview(){const{cameraPreview:e,captureBtn:t}=this.getElements();e&&(e.srcObject=null,e.style.display="none"),t&&(t.disabled=!0)}displayPhotoPreview(e){const{photoPreview:t}=this.getElements();t&&(t.src=e,t.style.display="block")}hidePhotoPreview(){const{photoPreview:e}=this.getElements();e&&(e.src="",e.style.display="none")}resetForm(){const{storyForm:e}=this.getElements();e&&e.reset(),this.hidePhotoPreview(),this.hideCameraPreview()}initMap(e,t){const{mapPicker:s,latInput:n,lonInput:i}=this.getElements();let a,c;if(window.L&&s){s.style.width="100%",s.style.height="400px",s.style.position="relative";const d=[-7.12,110.4225];a=L.map("map-picker",{zoom:12,center:d}),window.L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',minZoom:5,maxZoom:10}).addTo(a),"geolocation"in navigator||console.error("Geolocation tidak didukung oleh browser ini."),c=L.marker(d),navigator.geolocation.getCurrentPosition(g=>{const{latitude:w,longitude:b}=g.coords;console.log(`Latitude: ${w}, Longitude: ${b}`),a.setView([w,b],15),this.updateMapMarker(w,b,c,a),n.value=w.toFixed(5),i.value=b.toFixed(5)},g=>{console.error("Error getting current position:",g),c.addTo(a),c.bindPopup("Default Location (Semarang)").openPopup()}),a.on("click",g=>{const{lat:w,lng:b}=g.latlng;n.value=w.toFixed(5),i.value=b.toFixed(5),e(w,b,c,a)}),t(n,i,c,a)}return{map:a,marker:c}}updateMapMarker(e,t,s,n){const i=[e,t];return s?s.setLatLng(i):s=window.L.marker(i),s.addTo(n),s.bindPopup(`Latitude: ${e}, Longitude: ${t}`).openPopup(),s}async render(){return this.getTemplate()}async afterRender(){h(this,R,new Fe({view:this,addStoryModel:Ne,authModel:v})),await r(this,R).initialize()}}R=new WeakMap;var p,O,H,$;class Oe{constructor({view:e,detailStoryModel:t,authModel:s=v,urlParser:n}){u(this,p);u(this,O);u(this,H);u(this,$);h(this,p,e),h(this,O,t),h(this,H,s),h(this,$,n)}async initialize(){r(this,p).bindBackButton(this._handleBackButtonClick.bind(this)),await this._loadStoryDetail()}_handleBackButtonClick(e){e.preventDefault(),window.history.back()}async _loadStoryDetail(){const e=window.location.href,t=r(this,$).call(this,e);console.log("DEBUG: Story ID =",t);const s=localStorage.getItem("authToken");if(!s){r(this,p).showError("Please login first"),setTimeout(()=>window.location.href="#/login",2e3);return}r(this,p).showLoading();try{const n=await r(this,O).getStoryDetail(s,t);setTimeout(()=>{r(this,p).hideLoading(),n.success?r(this,p).displayStory(n.data):r(this,p).showError(n.error||"Failed to load story details.")},500)}catch(n){console.error("Error fetching story detail:",n),r(this,p).hideLoading(),r(this,p).showError("An unexpected error occurred while fetching story details.")}}}p=new WeakMap,O=new WeakMap,H=new WeakMap,$=new WeakMap;class $e{constructor(e="https://story-api.dicoding.dev/v1"){this.baseUrl=e}async getStoryDetail(e,t){try{const s=await fetch(`${this.baseUrl}/stories/${t}`,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),n=await s.json();if(!s.ok){console.warn("Network fetch for story detail failed, attempting to get from IndexedDB.");const i=await D.getStoryDetail(t);if(i)return{success:!0,data:i,error:null,source:"indexeddb_fallback"};throw new Error(n.message||"Failed to fetch story detail from network or cache.")}return{success:!0,data:n.story,error:null,source:"network"}}catch(s){console.error("Error fetching story detail:",s),console.warn("Network request for story detail failed, trying to retrieve from IndexedDB.");try{const n=await D.getStoryDetail(t);return n?{success:!0,data:n,error:null,source:"indexeddb"}:{success:!1,data:null,error:s.message||"An error occurred and no cached detail data available.",source:"no_detail_data_available"}}catch(n){return console.error("Error retrieving from IndexedDB for story detail:",n),{success:!1,data:null,error:`Network error and IndexedDB retrieval failed for detail: ${s.message||n.message}`,source:"fetch_and_indexeddb_detail_failed"}}}}}function Ue(o){const e=o.split("/");return{resource:e[1]||null,id:e[2]||null}}function je(o){let e="";return o.resource&&(e=e.concat(`/${o.resource}`)),o.id&&(e=e.concat("/:id")),e||"/"}function Ve(o){const s=new URL(o).hash.slice(1).split("/")[2];return s.startsWith(":")?s.slice(1):s}function ze(){return location.hash.replace("#","")||"/"}function We(){const o=ze(),e=Ue(o);return je(e)}var U;class Ge{constructor(){u(this,U)}getTemplate(){return`
      <header>
        <div class="header-content">
          <a href="/" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Back to Stories
          </a>
          <div id="userInfo"></div>
        </div>
      </header>

      <main id="asep">
        <div id="loading" class="loading">Loading story details...</div>
        <div id="error" class="error-message" style="display: none;"></div>

        <section id="storyContainer" class="story-container" style="display: none;">
          <img id="storyImage" class="story-image" src="" alt="Story Image">
          <div class="story-content">
            <div class="story-header">
              <h1 id="storyTitle" class="story-title"></h1>
              <div id="storyDate" class="story-date"></div>
            </div>
            <p id="storyDescription" class="story-description"></p>
            <div id="storyLocation" class="story-location" style="display: none;">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                <circle cx="12" cy="10" r="3"/>
              </svg>
              <span id="locationText"></span>
            </div>
            <div id="mapContainer" class="map-container" style="display: none;"></div>
          </div>
        </section>
      </main>
    `}getElements(){return{loadingElement:document.getElementById("loading"),errorElement:document.getElementById("error"),storyContainer:document.getElementById("storyContainer"),storyImage:document.getElementById("storyImage"),storyTitle:document.getElementById("storyTitle"),storyDate:document.getElementById("storyDate"),storyDescription:document.getElementById("storyDescription"),storyLocation:document.getElementById("storyLocation"),locationText:document.getElementById("locationText"),mapContainer:document.getElementById("mapContainer"),userInfo:document.getElementById("userInfo"),backButton:document.querySelector(".back-button")}}bindBackButton(e){const{backButton:t}=this.getElements();t&&t.addEventListener("click",e)}showLoading(){const{loadingElement:e,errorElement:t,storyContainer:s}=this.getElements();e&&(e.style.display="block"),t&&(t.style.display="none"),s&&(s.style.display="none")}hideLoading(){const{loadingElement:e}=this.getElements();e&&(e.style.display="none")}showError(e){const{errorElement:t,storyContainer:s}=this.getElements();t&&(t.textContent=e,t.style.display="block"),s&&(s.style.display="none")}displayStory(e){const{storyImage:t,storyTitle:s,storyDescription:n,storyDate:i,storyLocation:a,locationText:c,mapContainer:d,userInfo:g,storyContainer:w}=this.getElements();t&&(t.src=e.photoUrl,t.alt=`${e.name}'s story`),s&&(s.textContent=e.name),n&&(n.textContent=e.description);const b=new Date(e.createdAt);i&&(i.textContent=b.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})),e.lat&&e.lon?(a&&(a.style.display="flex"),c&&(c.textContent=`Lat: ${e.lat.toFixed(4)}, Lon: ${e.lon.toFixed(4)}`),this.initializeMap(e.lat,e.lon)):(a&&(a.style.display="none"),d&&(d.style.display="none"));const oe=localStorage.getItem("userName");oe&&g&&(g.textContent=`Hello, ${oe}`),w&&(w.style.display="block")}initializeMap(e,t){const{mapContainer:s}=this.getElements();if(!s||!window.L){console.warn("Leaflet or container missing.");return}s.style.display="block",s.innerHTML='<div id="map" style="height: 400px; width: 100%; position: relative;"></div>';const n=[e,t],i=L.map("map",{center:n,zoom:15,zoomControl:!1});L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',minZoom:5,maxZoom:18}).addTo(i),L.marker(i.getCenter()).addTo(i).bindPopup(`Location of the story:<br>Lat: ${e.toFixed(4)}<br>Lon: ${t.toFixed(4)}`).openPopup(),setTimeout(()=>{i.invalidateSize(),i.setView(n)},200);const c=L.popup();i.on("click",d=>{c.setLatLng(d.latlng).setContent(`You clicked at Lat: ${d.latlng.lat.toFixed(4)}, Lon: ${d.latlng.lng.toFixed(4)}`).openOn(i)})}async render(){return this.getTemplate()}async afterRender(){const e=new $e,t=v,s=Ve;h(this,U,new Oe({view:this,detailStoryModel:e,authModel:t,urlParser:s})),await r(this,U).initialize()}}U=new WeakMap;var f,_,j;class He{constructor({view:e,authModel:t,sleepFunction:s}){u(this,f);u(this,_);u(this,j);h(this,f,e),h(this,_,t),h(this,j,s)}async initialize(){r(this,f).bindLoginFormSubmit(this._handleLoginSubmit.bind(this)),localStorage.getItem("authToken")&&(window.location.hash="/")}async _handleLoginSubmit(e){e.preventDefault(),r(this,f).hideMessages();const{email:t,password:s}=r(this,f).getLoginFormValues();try{const n=await r(this,_).login(t,s);n.success?(r(this,_).constructor.storeAuthData(n.data.token,n.data.userId,n.data.name),r(this,f).displayMessage(n.data.message,"success"),await r(this,j).call(this,5e3),r(this,f).displayMessage("Login successful! Redirecting to home page...","success"),window.location.hash="/"):r(this,f).displayMessage(n.error||"Login failed. Please try again.","error")}catch(n){r(this,f).displayMessage("An error occurred. Please check your connection and try again.","error"),console.error("Error:",n)}}}f=new WeakMap,_=new WeakMap,j=new WeakMap;function me(o=1e3){return new Promise(e=>setTimeout(e,o))}var V;class qe{constructor(){u(this,V)}getTemplate(){return`
      <main class="container">
        <h1>Login to Your Account</h1>
        <form id="loginForm">
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>
          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required>
          </div>
          <button type="submit">Login</button>
        </form>
        <section style="margin-top: 16px; text-align: center;">
          <span>Belum punya akun? </span>
          <a href="#/register" id="register-link">Daftar di sini</a>
        </section>
        <section id="message" class="message"></section>
        <section id="userInfo" class="user-info" style="display:none;">
          <h3>Login Successful</h3>
          <p><strong>User ID:</strong> <span id="userId"></span></p>
          <p><strong>Name:</strong> <span id="userName"></span></p>
          <p><strong>Token:</strong></p>
          <p class="token" id="userToken"></p>
        </section>
      </main>
    `}getElements(){return{loginForm:document.getElementById("loginForm"),messageDiv:document.getElementById("message"),userInfoDiv:document.getElementById("userInfo"),emailInput:document.getElementById("email"),passwordInput:document.getElementById("password")}}bindLoginFormSubmit(e){const{loginForm:t}=this.getElements();t&&t.addEventListener("submit",e)}displayMessage(e,t){const{messageDiv:s}=this.getElements();s&&(s.textContent=e,s.className=`message ${t}`,s.style.display="block")}hideMessages(){const{messageDiv:e,userInfoDiv:t}=this.getElements();e&&(e.style.display="none"),t&&(t.style.display="none")}getLoginFormValues(){const{emailInput:e,passwordInput:t}=this.getElements();return{email:e.value,password:t.value}}async render(){return this.getTemplate()}async afterRender(){const e=new v,t=me;h(this,V,new He({view:this,authModel:e,sleepFunction:t})),await r(this,V).initialize()}}V=new WeakMap;var m,E,T,x;class Je{constructor({view:e,registerModel:t,loginModel:s,sleepFunction:n}){u(this,m);u(this,E);u(this,T);u(this,x);h(this,m,e),h(this,E,t),h(this,T,s),h(this,x,n)}async initialize(){r(this,m).bindRegisterFormSubmit(this._handleRegistrationSubmit.bind(this)),r(this,m).bindGuestButtonClick(this._handleGuestAccountCreation.bind(this))}async _handleRegistrationSubmit(e){e.preventDefault(),r(this,m).hideMessage();const{name:t,email:s,password:n}=r(this,m).getRegistrationFormValues(),i=r(this,E).isValidEmail(s),a=r(this,E).isValidPassword(n);if(!i){r(this,m).displayMessage("Invalid email format.","error");return}if(!a){r(this,m).displayMessage("Password must be at least 8 characters.","error");return}try{const c=await new(r(this,E))().register({name:t,email:s,password:n});if(console.log("Result presenter:",c),c.success)r(this,m).displayMessage("Registration successful! Please check your email to verify your account.","success"),r(this,m).resetRegistrationForm(),await r(this,x).call(this,500),window.location.href="#/login";else{r(this,m).displayMessage(c.error||"Registration failed. Please try again.","error");return}}catch(c){r(this,m).displayMessage("An error occurred. Please check your connection and try again.","error"),console.error("Error:",c)}}async _handleGuestAccountCreation(){try{const e=`Guest_${Math.random().toString(36).substring(2,8)}`,t=`${e.toLowerCase()}.${Math.random().toString(36).substring(2,8)}@gmail.com`,s=Math.random().toString(36).substring(2,10);if((await new(r(this,E))().register({name:e,email:t,password:s})).success){r(this,m).displayMessage("Guest account created successfully!","success"),localStorage.setItem("guestSession",JSON.stringify({email:t,password:s}));const i=JSON.parse(localStorage.getItem("guestSession")),a=await new(r(this,T))().login(i.email,i.password);a.success?(r(this,T).storeAuthData(a.data.token,a.data.userId,a.data.name),await r(this,x).call(this,2e3),window.location.href="/"):r(this,m).displayMessage("Failed to log in with guest account.","error")}else{r(this,m).displayMessage("Failed to create guest account. Please try again.","error");return}}catch(e){r(this,m).displayMessage("Error creating guest account.","error"),console.error("Guest account error:",e)}}}m=new WeakMap,E=new WeakMap,T=new WeakMap,x=new WeakMap;class Ke{constructor(e=q.REGISTER||"https://story-api.dicoding.dev/v1/register"){this.baseUrl=e}async register({name:e,email:t,password:s}){try{const n={name:e,email:t,password:s};console.log("Request payload:",n);const i=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await i.text();console.log("Raw response:",a);const c=a?JSON.parse(a):{};if(console.log("Data response:",c),i.ok)return{success:!0,data:c,error:null};throw new Error(c.message||"Registration failed")}catch(n){return{success:!1,data:null,error:n.message}}}static isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static isValidPassword(e){return e.length>=8}}var z;class Ye{constructor(){u(this,z)}getTemplate(){return`
      <main class="container">
        <h1>Register Account</h1>
        <form id="registrationForm">
          <div class="form-group">
            <label for="username">Full Name</label>
            <input type="text" id="username" name="username" required />
          </div>
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required />
          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required minlength="8" />
            <div class="password-hint">Password must be at least 8 characters</div>
          </div>
          <button type="submit">Register</button>
          <button type="button" id="guestButton" class="guest-button">Continue as Guest</button>
        </form>
        <section id="message" class="message"></section>
      </main>
    `}getElements(){return{registrationForm:document.getElementById("registrationForm"),guestButton:document.getElementById("guestButton"),messageDiv:document.getElementById("message"),usernameInput:document.getElementById("username"),emailInput:document.getElementById("email"),passwordInput:document.getElementById("password")}}bindRegisterFormSubmit(e){const{registrationForm:t}=this.getElements();t&&t.addEventListener("submit",e)}bindGuestButtonClick(e){const{guestButton:t}=this.getElements();t&&t.addEventListener("click",e)}displayMessage(e,t){const{messageDiv:s}=this.getElements();s&&(s.textContent=e,s.className=`message ${t}`,s.style.display="block")}hideMessage(){const{messageDiv:e}=this.getElements();e&&(e.style.display="none")}getRegistrationFormValues(){const{usernameInput:e,emailInput:t,passwordInput:s}=this.getElements();return{name:e.value,email:t.value,password:s.value}}resetRegistrationForm(){const{registrationForm:e}=this.getElements();e&&e.reset()}async render(){return this.getTemplate()}async afterRender(){const e=Ke,t=v,s=me;h(this,z,new Je({view:this,registerModel:e,loginModel:t,sleepFunction:s})),await r(this,z).initialize()}}z=new WeakMap;const Z={"/":new Ae,"/detail/:id":new Ge,"/login":new qe,"/register":new Ye,"/add":new Re};class Ze{constructor({content:e}){this._content=e}async renderPage(){const e=localStorage.getItem("authToken");let t=We();console.log(t),(!t||!Z[t])&&(t="/login",window.location.hash="/login"),!e&&t!=="/register"&&(t="/login",window.location.hash="/login"),e&&t==="/login"&&(t="/",window.location.hash="/");const s=Z[t]||Z["/login"];if(!s){document.startViewTransition?document.startViewTransition(async()=>{this._content.innerHTML="<h2>404 - Halaman tidak ditemukan</h2>"}):this._content.innerHTML="<h2>404 - Halaman tidak ditemukan</h2>";return}document.startViewTransition?document.startViewTransition(async()=>{this._content.innerHTML=await s.render(),await s.afterRender()}):(this._content.innerHTML=await s.render(),await s.afterRender())}showNotificationPermissionPrompt(){return Notification.requestPermission()}showNotificationSupportWarning(){console.warn("Notifications not supported in this browser.")}showNotificationPermissionDeniedWarning(){console.warn("Notification permission denied.")}}const Qe="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";function Xe(o){const e="=".repeat((4-o.length%4)%4),t=(o+e).replace(/\-/g,"+").replace(/_/g,"/"),s=window.atob(t),n=new Uint8Array(s.length);for(let i=0;i<s.length;++i)n[i]=s.charCodeAt(i);return n}class et{constructor(){this._vapidPublicKey=Qe}_getToken(){const e=localStorage.getItem("authToken");return e||(console.log("Silahkan login dulu"),window.location.hash="/login"),e}async subscribeUserToPush(){if(!("serviceWorker"in navigator)||!("PushManager"in window))throw new Error("Service Worker or Push API not supported");try{const e=await navigator.serviceWorker.ready,t=Xe(this._vapidPublicKey),s=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:t});return console.log("Push Subscription:",s),await this._sendSubscriptionToBackend(s)}catch(e){throw console.error("Failed to subscribe the user: ",e),e}}async _sendSubscriptionToBackend(e){const t=this._getToken();if(!t){console.error("No auth token found");return}console.log("Preparing subscription data for backend...");const s={endpoint:e.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(e.getKey("p256dh")))),auth:btoa(String.fromCharCode(...new Uint8Array(e.getKey("auth"))))}};console.log("Sending subscription to backend:",s);try{const n=await fetch(subscribeUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(s)}),i=await n.json();if(!n.ok)throw console.error("Backend subscription error:",i),new Error(i.message||"Failed to send subscription to backend");return console.log("Backend subscription successful:",i),i}catch(n){throw console.error("Subscription error:",n),n}}async unsubscribeUserFromPush(){if(!("serviceWorker"in navigator))throw new Error("Service Worker not supported");try{const t=await(await navigator.serviceWorker.ready).pushManager.getSubscription();if(t){const s=t.endpoint;if(await t.unsubscribe())return console.log("User unsubscribed successfully."),await this._sendUnsubscriptionToBackend(s);throw new Error("Failed to unsubscribe the user from browser.")}else return console.log("No active push subscription found."),null}catch(e){throw console.error("Failed to unsubscribe the user: ",e),e}}async _sendUnsubscriptionToBackend(e){const t=this._getToken();if(!t)return;const s="https://story-api.dicoding.dev/v1/notifications/subscribe",n={endpoint:e};try{const i=await fetch(s,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(n)}),a=await i.json();if(!i.ok)throw new Error(a.message||"Failed to send unsubscription to backend");return console.log("Unsubscription sent to backend successfully:",a),a}catch(i){throw console.error("Error sending unsubscription to backend:",i),i}}}var I,B;class tt{constructor({view:e,notificationModel:t}){u(this,I);u(this,B);h(this,I,e),h(this,B,t)}async initializeNotifications(){if("Notification"in window)try{console.log("Requesting notification permission...");const e=await r(this,I).showNotificationPermissionPrompt();if(e==="granted"){console.log("Permission granted, checking existing subscription...");const s=await(await navigator.serviceWorker.ready).pushManager.getSubscription();if(s){console.log("Existing subscription found:",s);try{await r(this,B).unsubscribeUserFromPush(),console.log("Successfully unsubscribed from previous subscription")}catch(i){console.warn("Unsubscription error:",i)}}console.log("Attempting to subscribe...");const n=await r(this,B).subscribeUserToPush();console.log("New subscription created:",n)}else console.log("Permission denied:",e),r(this,I).showNotificationPermissionDeniedWarning()}catch(e){console.error("Notification initialization error:",e)}else console.log("Notifications not supported"),r(this,I).showNotificationSupportWarning()}async handleUnsubscribeClick(){try{await r(this,B).unsubscribeUserFromPush()}catch(e){console.error("Error during unsubscription:",e)}}async checkSubscriptionStatus(){try{const t=await(await navigator.serviceWorker.ready).pushManager.getSubscription()}catch(e){console.error("Error checking subscription status:",e)}}}I=new WeakMap,B=new WeakMap;document.addEventListener("DOMContentLoaded",async()=>{if("serviceWorker"in navigator)try{const s=await navigator.serviceWorker.register("/service-worker.js");console.log("ServiceWorker registration successful:",s)}catch(s){console.error("ServiceWorker registration failed:",s)}const o=new Ze({content:document.querySelector("#main-content")}),e=new et;await new tt({view:o,notificationModel:e}).initializeNotifications(),await o.renderPage(),window.addEventListener("hashchange",async()=>{await o.renderPage()})});
